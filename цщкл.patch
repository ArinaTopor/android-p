Subject: [PATCH] цщкл
---
Index: app/src/main/java/com/example/app/ui/theme/Type.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/theme/Type.kt b/app/src/main/java/com/example/app/ui/theme/Type.kt
new file mode 100644
--- /dev/null	(date 1759574255368)
+++ b/app/src/main/java/com/example/app/ui/theme/Type.kt	(date 1759574255368)
@@ -0,0 +1,34 @@
+package com.example.app.ui.theme
+
+import androidx.compose.material3.Typography
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.unit.sp
+
+// Set of Material typography styles to start with
+val Typography = Typography(
+    bodyLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 16.sp,
+        lineHeight = 24.sp,
+        letterSpacing = 0.5.sp
+    )
+    /* Other default text styles to override
+    titleLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 22.sp,
+        lineHeight = 28.sp,
+        letterSpacing = 0.sp
+    ),
+    labelSmall = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Medium,
+        fontSize = 11.sp,
+        lineHeight = 16.sp,
+        letterSpacing = 0.5.sp
+    )
+    */
+)
\ No newline at end of file
Index: app/src/main/java/com/example/app/viewmodels/MainViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/viewmodels/MainViewModel.kt b/app/src/main/java/com/example/app/viewmodels/MainViewModel.kt
new file mode 100644
--- /dev/null	(date 1759576321438)
+++ b/app/src/main/java/com/example/app/viewmodels/MainViewModel.kt	(date 1759576321438)
@@ -0,0 +1,13 @@
+package com.example.app.viewmodels
+
+import androidx.lifecycle.ViewModel
+
+data class Item(val id: Int, val title: String, val description: String)
+
+class MainViewModel : ViewModel() {
+    val items = listOf(
+        Item(1, "Проект 1", "Описание первого проекта"),
+        Item(2, "Проект 2", "Описание второго проекта"),
+        Item(3, "Проект 3", "Описание третьего проекта")
+    )
+}
Index: app/src/main/java/com/example/app/ui/theme/Color.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/theme/Color.kt b/app/src/main/java/com/example/app/ui/theme/Color.kt
new file mode 100644
--- /dev/null	(date 1759574255359)
+++ b/app/src/main/java/com/example/app/ui/theme/Color.kt	(date 1759574255359)
@@ -0,0 +1,11 @@
+package com.example.app.ui.theme
+
+import androidx.compose.ui.graphics.Color
+
+val Purple80 = Color(0xFFD0BCFF)
+val PurpleGrey80 = Color(0xFFCCC2DC)
+val Pink80 = Color(0xFFEFB8C8)
+
+val Purple40 = Color(0xFF6650a4)
+val PurpleGrey40 = Color(0xFF625b71)
+val Pink40 = Color(0xFF7D5260)
\ No newline at end of file
Index: app/src/main/java/com/example/app/ui/theme/Theme.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/theme/Theme.kt b/app/src/main/java/com/example/app/ui/theme/Theme.kt
new file mode 100644
--- /dev/null	(date 1759574255593)
+++ b/app/src/main/java/com/example/app/ui/theme/Theme.kt	(date 1759574255593)
@@ -0,0 +1,58 @@
+package com.example.app.ui.theme
+
+import android.app.Activity
+import android.os.Build
+import androidx.compose.foundation.isSystemInDarkTheme
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.darkColorScheme
+import androidx.compose.material3.dynamicDarkColorScheme
+import androidx.compose.material3.dynamicLightColorScheme
+import androidx.compose.material3.lightColorScheme
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.platform.LocalContext
+
+private val DarkColorScheme = darkColorScheme(
+    primary = Purple80,
+    secondary = PurpleGrey80,
+    tertiary = Pink80
+)
+
+private val LightColorScheme = lightColorScheme(
+    primary = Purple40,
+    secondary = PurpleGrey40,
+    tertiary = Pink40
+
+    /* Other default colors to override
+    background = Color(0xFFFFFBFE),
+    surface = Color(0xFFFFFBFE),
+    onPrimary = Color.White,
+    onSecondary = Color.White,
+    onTertiary = Color.White,
+    onBackground = Color(0xFF1C1B1F),
+    onSurface = Color(0xFF1C1B1F),
+    */
+)
+
+@Composable
+fun AppTheme(
+    darkTheme: Boolean = isSystemInDarkTheme(),
+    // Dynamic color is available on Android 12+
+    dynamicColor: Boolean = true,
+    content: @Composable () -> Unit
+) {
+    val colorScheme = when {
+        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {
+            val context = LocalContext.current
+            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)
+        }
+
+        darkTheme -> DarkColorScheme
+        else -> LightColorScheme
+    }
+
+    MaterialTheme(
+        colorScheme = colorScheme,
+        typography = Typography,
+        content = content
+    )
+}
\ No newline at end of file
Index: app/src/main/java/com/example/app/ui/navigation/BottomNavBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/navigation/BottomNavBar.kt b/app/src/main/java/com/example/app/ui/navigation/BottomNavBar.kt
new file mode 100644
--- /dev/null	(date 1759576129364)
+++ b/app/src/main/java/com/example/app/ui/navigation/BottomNavBar.kt	(date 1759576129364)
@@ -0,0 +1,32 @@
+package com.example.app.ui.navigation
+
+import androidx.compose.material.icons.filled.List
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.navigation.NavController
+import androidx.navigation.compose.currentBackStackEntryAsState
+import com.example.app.ui.navigation.Screen
+
+@Composable
+fun BottomNavBar(navController: NavController) {
+    val items = listOf(
+        Screen.List,
+        Screen.Settings
+    )
+    NavigationBar {
+        val currentDestination = navController.currentBackStackEntryAsState().value?.destination?.route
+        items.forEach { screen ->
+            NavigationBarItem(
+                label = { Text(screen.title) },
+                selected = currentDestination?.startsWith(screen.route.removeSuffix("/{itemId}")) == true,
+                onClick = {
+                    navController.navigate(screen.route) {
+                        popUpTo(navController.graph.startDestinationId)
+                        launchSingleTop = true
+                    }
+                },
+                icon = { Icon(androidx.compose.material.icons.Icons.Default.List, contentDescription = null) }
+            )
+        }
+    }
+}
Index: app/src/main/java/com/example/app/ui/navigation/NavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/navigation/NavGraph.kt b/app/src/main/java/com/example/app/ui/navigation/NavGraph.kt
new file mode 100644
--- /dev/null	(date 1759576488237)
+++ b/app/src/main/java/com/example/app/ui/navigation/NavGraph.kt	(date 1759576488237)
@@ -0,0 +1,20 @@
+package com.example.app.ui.navigation
+
+import androidx.compose.runtime.Composable
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import com.example.app.screens.*
+import com.example.myapp.ui.screens.ListScreen
+
+@Composable
+fun NavGraph(navController: NavHostController) {
+    NavHost(navController = navController, startDestination = "list") {
+        composable("list") { ListScreen(navController) }
+        composable("detail/{itemId}") { backStackEntry ->
+            val id = backStackEntry.arguments?.getString("itemId") ?: ""
+            Details(itemId = id, navController = navController)
+        }
+        composable("settings") { Settings() }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/app/screens/Settings.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/screens/Settings.kt b/app/src/main/java/com/example/app/screens/Settings.kt
new file mode 100644
--- /dev/null	(date 1759576821425)
+++ b/app/src/main/java/com/example/app/screens/Settings.kt	(date 1759576821425)
@@ -0,0 +1,19 @@
+package com.example.app.screens
+
+import androidx.compose.foundation.layout.*
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun Settings() {
+    Scaffold(
+        topBar = { TopAppBar(title = { Text("Настройки") }) }
+    ) { padding ->
+        Column(modifier = Modifier.padding(padding).padding(16.dp)) {
+            Text("Тут будут настройки")
+        }
+    }
+}
Index: app/src/main/java/com/example/app/ui/navigation/Screen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/navigation/Screen.kt b/app/src/main/java/com/example/app/ui/navigation/Screen.kt
new file mode 100644
--- /dev/null	(date 1759576008044)
+++ b/app/src/main/java/com/example/app/ui/navigation/Screen.kt	(date 1759576008044)
@@ -0,0 +1,7 @@
+package com.example.app.ui.navigation
+
+sealed class Screen(val route: String, val title: String) {
+    object List : Screen("list", "Список")
+    object Detail : Screen("detail/{itemId}", "Детали")
+    object Settings : Screen("settings", "Настройки")
+}
Index: app/src/main/java/com/example/app/screens/ListScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/screens/ListScreen.kt b/app/src/main/java/com/example/app/screens/ListScreen.kt
new file mode 100644
--- /dev/null	(date 1759576811561)
+++ b/app/src/main/java/com/example/app/screens/ListScreen.kt	(date 1759576811561)
@@ -0,0 +1,35 @@
+package com.example.myapp.ui.screens
+
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.navigation.NavController
+import com.example.app.viewmodels.MainViewModel
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun ListScreen(navController: NavController, viewModel: MainViewModel = androidx.lifecycle.viewmodel.compose.viewModel()) {
+    val items = viewModel.items
+    Scaffold(
+        topBar = { TopAppBar(title = { Text("Список") }) }
+    ) { padding ->
+        LazyColumn(contentPadding = padding) {
+            items(items) { item ->
+                ListItem(
+                    headlineContent = { Text(item.title) },
+                    supportingContent = { Text(item.description) },
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .clickable {
+                            navController.navigate("detail/${item.id}")
+                        }
+                )
+                HorizontalDivider()
+            }
+        }
+    }
+}
Index: app/src/main/java/com/example/app/screens/Details.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/screens/Details.kt b/app/src/main/java/com/example/app/screens/Details.kt
new file mode 100644
--- /dev/null	(date 1759576615812)
+++ b/app/src/main/java/com/example/app/screens/Details.kt	(date 1759576615812)
@@ -0,0 +1,36 @@
+package com.example.app.screens
+
+import androidx.compose.foundation.layout.*
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.ArrowBack
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+import androidx.navigation.NavController
+import com.example.app.viewmodels.MainViewModel
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun Details(itemId: String, navController: NavController, viewModel: MainViewModel = androidx.lifecycle.viewmodel.compose.viewModel()) {
+    val item = viewModel.items.find { it.id.toString() == itemId }
+
+    Scaffold(
+        topBar = {
+            TopAppBar(
+                title = { Text(item?.title ?: "Нет данных") },
+                navigationIcon = {
+                    IconButton(onClick = { navController.popBackStack() }) {
+                        Icon(Icons.Default.ArrowBack, contentDescription = "Назад")
+                    }
+                }
+            )
+        }
+    ) { padding ->
+        Column(modifier = Modifier.padding(padding).padding(16.dp)) {
+            Text(text = "ID: ${item?.id}")
+            Spacer(Modifier.height(8.dp))
+            Text(text = "Описание: ${item?.description}")
+        }
+    }
+}
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
new file mode 100644
--- /dev/null	(date 1759574255555)
+++ b/app/src/main/res/values/themes.xml	(date 1759574255555)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <style name="Theme.App" parent="android:Theme.Material.Light.NoActionBar" />
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/app/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/MainActivity.kt b/app/src/main/java/com/example/app/MainActivity.kt
new file mode 100644
--- /dev/null	(date 1759576427321)
+++ b/app/src/main/java/com/example/app/MainActivity.kt	(date 1759576427321)
@@ -0,0 +1,52 @@
+package com.example.app
+
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.activity.enableEdgeToEdge
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.navigation.compose.rememberNavController
+import com.example.app.ui.navigation.BottomNavBar
+import com.example.app.ui.navigation.NavGraph
+import com.example.app.ui.theme.AppTheme
+
+class MainActivity : ComponentActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContent {
+            MyApp()
+        }
+    }
+}
+
+@Composable
+fun MyApp() {
+    val navController = rememberNavController()
+    Scaffold(
+        bottomBar = { BottomNavBar(navController) }
+    ) { padding ->
+        NavGraph(navController)
+    }
+}
+
+@Composable
+fun Greeting(name: String, modifier: Modifier = Modifier) {
+    Text(
+        text = "Hello $name!",
+        modifier = modifier
+    )
+}
+
+@Preview(showBackground = true)
+@Composable
+fun GreetingPreview() {
+    AppTheme {
+        Greeting("Android")
+    }
+}
\ No newline at end of file
